# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: uprez-valuation
  labels:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: backend
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: backend

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: uprez-valuation
  labels:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: frontend
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: frontend

---
# Admin Service
apiVersion: v1
kind: Service
metadata:
  name: admin-service
  namespace: uprez-valuation
  labels:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: admin
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: admin

---
# PostgreSQL Service (if running in cluster)
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: uprez-valuation
  labels:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: database

---
# Redis Service (if running in cluster)
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: uprez-valuation
  labels:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: cache

---
# Headless Service for StatefulSet Discovery
apiVersion: v1
kind: Service
metadata:
  name: backend-headless
  namespace: uprez-valuation
  labels:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: backend
spec:
  clusterIP: None
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: uprez-valuation
    app.kubernetes.io/component: backend